import the class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

==================
create an instance
==================
>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented


=================
Test valid inputs
=================
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("", 2)

=======================
Test for invalid inputs
=======================
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0

>>> bg.integer_validator("name", -50)
Traceback (most recent call last):
    ...
ValueError: name must be greater than 0


>>> bg.integer_validator("name", None)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("name", {1,5,3})
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("name", [4,6,8])
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("name", (1,))
Traceback (most recent call last):
    ...
TypeError: name must be an integer


================
Test num of args
================
>>> bg.integer_validator("name")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(, 3)
Traceback (most recent call last):
    ...
SyntaxError: invalid syntax
